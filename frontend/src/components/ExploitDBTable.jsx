import React, { useState, useEffect } from 'react';
import { supabase } from '../supabaseClient.js';
import { ExternalLink } from 'lucide-react';

const ExploitDBTable = () => {
  const [exploits, setExploits] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [search, setSearch] = useState('');
  const [currentPage, setCurrentPage] = useState(1);
  const [exploitsPerPage] = useState(10);
  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'descending' });

  useEffect(() => {
    fetchExploits();
  }, []);

  const fetchExploits = async () => {
    try {
      setLoading(true);
      const { data, error } = await supabase
        .from('exploit_db')
        .select('*');

      if (error) {
        throw error;
      }

      // Initial sort by date descending
      const sortedData = [...data].sort((a, b) => {
        if (a.date < b.date) return 1;
        if (a.date > b.date) return -1;
        return 0;
      });

      setExploits(sortedData);
    } catch (error) {
      console.error('Error fetching Exploit-DB data:', error.message);
      setError('Error fetching Exploit-DB data: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const requestSort = (key) => {
    let direction = 'ascending';
    if (
      sortConfig.key === key &&
      sortConfig.direction === 'ascending'
    ) {
      direction = 'descending';
    }
    setSortConfig({ key, direction });
  };

  const sortedExploits = React.useMemo(() => {
    let sortableItems = [...exploits];
    if (sortConfig !== null) {
      sortableItems.sort((a, b) => {
        if (a[sortConfig.key] < b[sortConfig.key]) {
          return sortConfig.direction === 'ascending' ? -1 : 1;
        }
        if (a[sortConfig.key] > b[sortConfig.key]) {
          return sortConfig.direction === 'ascending' ? 1 : -1;
        }
        return 0;
      });
    }
    return sortableItems;
  }, [exploits, sortConfig]);

  const filteredExploits = sortedExploits.filter(exploit =>
    exploit.description.toLowerCase().includes(search.toLowerCase()) ||
    (exploit.cve_id && exploit.cve_id.toLowerCase().includes(search.toLowerCase())) ||
    exploit.type.toLowerCase().includes(search.toLowerCase())
  );

  // Pagination logic
  const indexOfLastExploit = currentPage * exploitsPerPage;
  const indexOfFirstExploit = indexOfLastExploit - exploitsPerPage;
  const currentExploits = filteredExploits.slice(indexOfFirstExploit, indexOfLastExploit);

  const paginate = (pageNumber) => setCurrentPage(pageNumber);

  const totalPages = Math.ceil(filteredExploits.length / exploitsPerPage);

  const renderSortIndicator = (key) => {
    if (sortConfig.key !== key) {
      return null;
    }
    if (sortConfig.direction === 'ascending') {
      return ' 🔼';
    }
    return ' 🔽';
  };

  if (loading) return <div className="text-center p-8 text-gray-500">در حال بارگذاری داده‌های Exploit-DB...</div>;
  if (error) return <div className="text-center p-8 text-red-500">خطا: {error}</div>;

  return (
    <div className="bg-white shadow-xl rounded-xl p-6 lg:p-8">
      <h2 className="text-3xl font-bold mb-6 text-gray-800 border-b pb-3">جدول پایگاه داده Exploit-DB</h2>

      <div className="mb-6 flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
        <input
          type="text"
          placeholder="جستجو بر اساس توضیحات، CVE ID یا نوع..."
          className="p-3 border border-gray-300 rounded-lg w-full md:w-1/3 focus:ring-red-500 focus:border-red-500 transition duration-150 ease-in-out shadow-sm"
          value={search}
          onChange={(e) => {
            setSearch(e.target.value);
            setCurrentPage(1); // Reset to first page on search
          }}
        />
        <div className="text-sm text-gray-600">
          تعداد کل اکسپلویت‌ها: <span className="font-semibold text-gray-800">{filteredExploits.length}</span>
        </div>
      </div>

      <div className="overflow-x-auto rounded-lg border border-gray-200 shadow-lg">
        <table className="min-w-full divide-y divide-gray-200">
          <thead className="bg-gray-50">
            <tr>
              <th
                className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100 transition duration-150"
                onClick={() => requestSort('id')}
              >
                شناسه {renderSortIndicator('id')}
              </th>
              <th
                className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider"
              >
                توضیحات
              </th>
              <th
                className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider"
              >
                CVE مرتبط
              </th>
              <th
                className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100 transition duration-150"
                onClick={() => requestSort('type')}
              >
                نوع {renderSortIndicator('type')}
              </th>
              <th
                className="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100 transition duration-150"
                onClick={() => requestSort('date')}
              >
                تاریخ {renderSortIndicator('date')}
              </th>
              <th
                className="px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider"
              >
                لینک
              </th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {currentExploits.map((exploit) => (
              <tr key={exploit.id} className="hover:bg-gray-50 transition duration-150 ease-in-out">
                <td className="px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  {exploit.id}
                </td>
                <td className="px-4 py-4 text-sm text-gray-700 max-w-lg truncate">
                  {exploit.description}
                </td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-red-600 font-semibold">
                  {exploit.cve_id || 'N/A'}
                </td>
                <td className="px-4 py-4 whitespace-nowrap text-sm">
                  <span className="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                    {exploit.type}
                  </span>
                </td>
                <td className="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
                  {new Date(exploit.date).toLocaleDateString('fa-IR')}
                </td>
                <td className="px-4 py-4 whitespace-nowrap text-center text-sm font-medium">
                  <a
                    href={exploit.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-red-600 hover:text-red-800 transition duration-150 inline-flex items-center"
                    title="مشاهده در Exploit-DB"
                  >
                    <ExternalLink className="w-4 h-4" />
                  </a>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Pagination Controls */}
      <div className="flex justify-between items-center mt-6">
        <button
          onClick={() => paginate(currentPage - 1)}
          disabled={currentPage === 1}
          className="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-lg shadow-md hover:bg-red-700 disabled:opacity-50 transition duration-150"
        >
          قبلی
        </button>

        <span className="text-sm text-gray-700">
          صفحه <span className="font-semibold">{currentPage}</span> از <span className="font-semibold">{totalPages}</span>
        </span>

        <button
          onClick={() => paginate(currentPage + 1)}
          disabled={currentPage === totalPages}
          className="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-lg shadow-md hover:bg-red-700 disabled:opacity-50 transition duration-150"
        >
          بعدی
        </button>
      </div>
    </div>
  );
};

export default ExploitDBTable;
