// frontend/src/components/ExploitDBTable.jsx
import React, { useState, useEffect } from 'react';
import { supabase } from '../supabaseClient'; // Import from the updated client file
import { Loader2, DatabaseZap } from 'lucide-react';

const ExploitDBTable = () => {
  const [exploits, setExploits] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchExploits = async () => {
      setLoading(true);
      setError(null);

      // [DEBUG] Check if Supabase client is properly initialized
      if (!supabase || !supabase.from) {
        const errMsg = "Supabase client not initialized. Check environment variables.";
        console.error(errMsg);
        setError(errMsg);
        setLoading(false);
        return;
      }

      const { data, error: queryError } = await supabase // Renamed error variable
        .from('exploits')
        .select('*')
        .order('date', { ascending: false })
        .limit(20);

      if (queryError) {
        // [DEBUG] Log the full error object from Supabase
        console.error('::ERROR:: Fetching Exploit DB data failed. Full error object:');
        console.error(queryError); // Log the entire error object
        setError(`Failed to fetch Exploit DB data. Code: ${queryError.code || 'N/A'}. Hint: ${queryError.hint || 'None'}. Check console for details.`);
        setExploits([]); // Clear data on error
      } else {
        setExploits(data || []); // Ensure data is always an array
      }
      setLoading(false);
    };

    fetchExploits();
  }, []);

  // Rest of the component's JSX remains the same...
  return (
    <div className="overflow-x-auto rounded-lg border border-gray-800">
      <table className="min-w-full divide-y divide-gray-800">
        <thead className="bg-gray-800/50">
          <tr>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-cyber-red uppercase tracking-wider">Date</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-cyber-red uppercase tracking-wider">Exploit Title</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-cyber-red uppercase tracking-wider">Type</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-cyber-red uppercase tracking-wider">Platform</th>
            <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-cyber-red uppercase tracking-wider">Author</th>
          </tr>
        </thead>
        <tbody className="bg-cyber-card divide-y divide-gray-800">
          {loading && (
            <tr>
              <td colSpan="5" className="px-6 py-10 text-center">
                <div className="flex justify-center items-center text-cyber-red">
                  <Loader2 className="animate-spin h-6 w-6 mr-3" />
                  <span>FETCHING EXPLOIT.DB_DATA...</span>
                </div>
              </td>
            </tr>
          )}
          {!loading && error && (
            <tr>
              <td colSpan="5" className="px-6 py-10 text-center">
                 <div className="text-cyber-red break-words px-4">
                  <DatabaseZap className="w-10 h-10 mx-auto mb-2" />
                  {/* Display the more detailed error message */}
                  <span>ERROR: {error}</span>
                </div>
              </td>
            </tr>
          )}
          {!loading && !error && exploits.length === 0 && (
             <tr>
                  <td colSpan="5" className="px-6 py-10 text-center">
                    <div className="text-gray-500">
                      <DatabaseZap className="w-10 h-10 mx-auto mb-2" />
                      <span>NO EXPLOIT DATA FOUND_</span>
                    </div>
                  </td>
                </tr>
          )}
          {!loading && !error && exploits.map((exploit) => (
             <tr key={exploit.id} className="hover:bg-gray-800/50 transition-colors duration-150">
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{new Date(exploit.date).toLocaleDateString()}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-cyber-red">
                    {/* Ensure title exists before substring */}
                    <a href={exploit.url} target="_blank" rel="noopener noreferrer" className="hover:underline" title={exploit.title}>
                      {exploit.title ? `${exploit.title.substring(0, 50)}...` : 'No Title'}
                    </a>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-cyber-text">{exploit.type}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-cyber-text">{exploit.platform}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-cyber-text">{exploit.author}</td>
                </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default ExploitDBTable;

