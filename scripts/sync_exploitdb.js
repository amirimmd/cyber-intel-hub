// مسیر فایل: scripts/sync_exploitdb.js
import { createClient } from '@supabase/supabase-js';
import fetch from 'node-fetch';
import 'dotenv/config'; // برای بارگیری متغیرها از .env در اجرای محلی

// URL منبع داده ExploitDB
const EXPLOITDB_CSV_URL = 'https://raw.githubusercontent.com/offensive-security/exploitdb/main/files_exploits.csv';

// دریافت متغیرهای محیطی
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('::ERROR:: SUPABASE_URL or SUPABASE_SERVICE_KEY is not set.');
  process.exit(1);
}

// مقداردهی اولیه Supabase Client با Service Key
// این اسکریپت در سرور اجرا می‌شود، بنابراین به Service Key نیاز دارد
const supabase = createClient(supabaseUrl, supabaseServiceKey);

/**
 * یک ردیف CSV را تجزیه می‌کند.
 * [FIX]: پارسر CSV ساده برای مدیریت مقادیر درون کوتیشن (مثل توضیحات دارای کاما)
 */
function parseCsvRow(row) {
  const result = [];
  let inQuotes = false;
  let currentField = '';
  for (let i = 0; i < row.length; i++) {
      const char = row[i];
      if (char === '"') {
          inQuotes = !inQuotes;
          // اگر درون کوتیشن هستیم، کاراکتر کوتیشن را به عنوان بخشی از محتوا اضافه نکنیم
      } else if (char === ',' && !inQuotes) {
          // فیلد فعلی تمام شد
          result.push(currentField.trim().replace(/^"(.*)"$/, '$1')); // حذف کوتیشن‌های احتمالی اطراف
          currentField = '';
      } else {
          currentField += char;
      }
  }
  // اضافه کردن آخرین فیلد
  result.push(currentField.trim().replace(/^"(.*)"$/, '$1')); // حذف کوتیشن‌های احتمالی اطراف
  return result;
}


/**
 * داده‌های CSV ExploitDB را واکشی و پردازش می‌کند
 */
async function syncExploitDB() {
  console.log('::INFO:: Starting ExploitDB sync...');
  
  try {
    // 1. واکشی داده‌های CSV
    console.log(`::INFO:: Fetching data from ${EXPLOITDB_CSV_URL}...`);
    const response = await fetch(EXPLOITDB_CSV_URL);
    if (!response.ok) {
      throw new Error(`Failed to fetch CSV: ${response.statusText}`);
    }
    const csvData = await response.text();
    
    // 2. پردازش داده‌های CSV
    const rows = csvData.split('\n');
    rows.shift(); // حذف هدر: id,file,description,date_published,author,type,platform,port

    console.log(`::INFO:: Found ${rows.length} exploits. Processing...`);

    const exploitsToInsert = [];
    for (const row of rows) {
      if (!row) continue; // نادیده گرفتن ردیف‌های خالی
      
      const values = parseCsvRow(row);
      // ExploitDB CSV structure: 0:id, 1:file, 2:description, 3:date_published, 4:author, 5:type, 6:platform, 7:port
      if (values.length < 7) continue; // نادیده گرفتن ردیف‌های ناقص

      const exploitId = values[0];
      const description = values[2]; // Description in CSV is the title
      const datePublished = values[3];
      const author = values[4];
      const type = values[5];
      const platform = values[6];

      // ساخت URL برای ExploitDB
      const exploitUrl = `https://www.exploit-db.com/exploits/${exploitId}`;

      // اطمینان از وجود ستون‌های title، date، author، type، platform و url در جدول exploits
      // در غیر این صورت، این قسمت در اسکریپت GitHub Action با خطا مواجه خواهد شد.
      exploitsToInsert.push({
        id: parseInt(exploitId, 10), 
        title: description, 
        date: datePublished, 
        author: author,
        type: type,
        platform: platform,
        url: exploitUrl,
      });
    }

    // 3. درج داده‌ها در Supabase
    // فقط 100 اکسپلویت آخر را درج می‌کنیم
    const latestExploits = exploitsToInsert.slice(-100); 
    
    console.log(`::INFO:: Upserting ${latestExploits.length} latest exploits into Supabase...`);
    
    const { error } = await supabase
      .from('exploits') // نام جدول شما
      .upsert(latestExploits, { onConflict: 'id' }); 

    if (error) {
      console.error('::ERROR:: Supabase upsert failed:', error);
      throw error;
    }

    console.log('::SUCCESS:: ExploitDB sync completed successfully.');
    
  } catch (error) {
    console.error('::FATAL:: An error occurred during ExploitDB sync:', error.message);
    process.exit(1);
  }
}

// اجرای اسکریپت
syncExploitDB();
